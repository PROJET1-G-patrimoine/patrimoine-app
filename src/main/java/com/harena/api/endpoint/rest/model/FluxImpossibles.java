/*
 * harena
 * harena
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.harena.api.endpoint.rest.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.harena.api.endpoint.rest.model.FluxArgent;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.harena.api.endpoint.rest.client.ApiClient;
/**
 * FluxImpossibles
 */
@JsonPropertyOrder({
  FluxImpossibles.JSON_PROPERTY_NOM_ARGENT,
  FluxImpossibles.JSON_PROPERTY_DATE,
  FluxImpossibles.JSON_PROPERTY_VALEUR_ARGENT,
  FluxImpossibles.JSON_PROPERTY_FLUX_ARGENTS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-07-29T12:58:40.550938700+01:00[GMT+01:00]", comments = "Generator version: 7.7.0")
public class FluxImpossibles implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_NOM_ARGENT = "nom_argent";
  private String nomArgent;

  public static final String JSON_PROPERTY_DATE = "date";
  private java.time.LocalDate date;

  public static final String JSON_PROPERTY_VALEUR_ARGENT = "valeur_argent";
  private Integer valeurArgent;

  public static final String JSON_PROPERTY_FLUX_ARGENTS = "flux_argents";
  private List<FluxArgent> fluxArgents = new ArrayList<>();

  public FluxImpossibles() { 
  }

  public FluxImpossibles nomArgent(String nomArgent) {
    this.nomArgent = nomArgent;
    return this;
  }

  /**
   * Get nomArgent
   * @return nomArgent
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NOM_ARGENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getNomArgent() {
    return nomArgent;
  }


  @JsonProperty(JSON_PROPERTY_NOM_ARGENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNomArgent(String nomArgent) {
    this.nomArgent = nomArgent;
  }


  public FluxImpossibles date(java.time.LocalDate date) {
    this.date = date;
    return this;
  }

  /**
   * Get date
   * @return date
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public java.time.LocalDate getDate() {
    return date;
  }


  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDate(java.time.LocalDate date) {
    this.date = date;
  }


  public FluxImpossibles valeurArgent(Integer valeurArgent) {
    this.valeurArgent = valeurArgent;
    return this;
  }

  /**
   * Get valeurArgent
   * @return valeurArgent
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VALEUR_ARGENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getValeurArgent() {
    return valeurArgent;
  }


  @JsonProperty(JSON_PROPERTY_VALEUR_ARGENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValeurArgent(Integer valeurArgent) {
    this.valeurArgent = valeurArgent;
  }


  public FluxImpossibles fluxArgents(List<FluxArgent> fluxArgents) {
    this.fluxArgents = fluxArgents;
    return this;
  }

  public FluxImpossibles addFluxArgentsItem(FluxArgent fluxArgentsItem) {
    if (this.fluxArgents == null) {
      this.fluxArgents = new ArrayList<>();
    }
    this.fluxArgents.add(fluxArgentsItem);
    return this;
  }

  /**
   * Get fluxArgents
   * @return fluxArgents
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FLUX_ARGENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<FluxArgent> getFluxArgents() {
    return fluxArgents;
  }


  @JsonProperty(JSON_PROPERTY_FLUX_ARGENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFluxArgents(List<FluxArgent> fluxArgents) {
    this.fluxArgents = fluxArgents;
  }


  /**
   * Return true if this FluxImpossibles object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FluxImpossibles fluxImpossibles = (FluxImpossibles) o;
    return Objects.equals(this.nomArgent, fluxImpossibles.nomArgent) &&
        Objects.equals(this.date, fluxImpossibles.date) &&
        Objects.equals(this.valeurArgent, fluxImpossibles.valeurArgent) &&
        Objects.equals(this.fluxArgents, fluxImpossibles.fluxArgents);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nomArgent, date, valeurArgent, fluxArgents);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FluxImpossibles {\n");
    sb.append("    nomArgent: ").append(toIndentedString(nomArgent)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    valeurArgent: ").append(toIndentedString(valeurArgent)).append("\n");
    sb.append("    fluxArgents: ").append(toIndentedString(fluxArgents)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `nom_argent` to the URL query string
    if (getNomArgent() != null) {
      joiner.add(String.format("%snom_argent%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getNomArgent()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `date` to the URL query string
    if (getDate() != null) {
      joiner.add(String.format("%sdate%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getDate()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `valeur_argent` to the URL query string
    if (getValeurArgent() != null) {
      joiner.add(String.format("%svaleur_argent%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getValeurArgent()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `flux_argents` to the URL query string
    if (getFluxArgents() != null) {
      for (int i = 0; i < getFluxArgents().size(); i++) {
        if (getFluxArgents().get(i) != null) {
          joiner.add(getFluxArgents().get(i).toUrlQueryString(String.format("%sflux_argents%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    return joiner.toString();
  }
}

